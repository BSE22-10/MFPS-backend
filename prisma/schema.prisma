// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Floor {
  id          Int           @id @default(autoincrement())
  name        String        @default("Floor B")
  no_of_slots Int
  ParkingSlot ParkingSlot[]
}

model ParkingSlot {
  id Int @id @default(autoincrement())

  floor      Floor?       @relation(fields: [floor_id], references: [id], onDelete: Cascade)
  floor_id   Int?
  isVehicle  Boolean      @default(false)
  SlotStatus SlotStatus[]
}

model Payment {
  id        Int       @id @default(autoincrement())
  bill      Int?
  status    Boolean   @default(false)
  createdAt DateTime  @default(now())
  Vehicle   Vehicle[]
}

model Vehicle {
  id             Int       @id @default(autoincrement())
  number_plate   String
  arrival_time   DateTime  @default(now())
  departing_time DateTime?

  payment    Payment? @relation(fields: [payment_id], references: [id], onDelete: Cascade)
  payment_id Int?

  contact_id Int?
  contact    PhoneNumber? @relation(fields: [contact_id], references: [id], onDelete: Cascade)

  account_id String?
  account    Accounts? @relation(fields: [account_id], references: [number_plate], onDelete: Cascade)
}

model Accounts {
  id           Int       @id @default(autoincrement())
  number_plate String    @unique()
  email        String
  amountPaid   Int
  Vehicle      Vehicle[]
}

model PhoneNumber {
  id          Int    @id @default(autoincrement())
  phoneNumber String

  Vehicle Vehicle[]
}

model SlotStatus {
  id        Int      @id @default(autoincrement())
  status    Boolean  @default(false)
  createdAt DateTime @default(now())

  slot_id Int?
  slot    ParkingSlot? @relation(fields: [slot_id], references: [id], onDelete: Cascade)
}

model Admin {
  id       Int    @id @default(autoincrement())
  email    String @unique()
  password String
}
